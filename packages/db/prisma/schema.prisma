generator kysely {
  provider  = "prisma-kysely"
  output    = "../src"
  fileName  = "schema.ts"
  camelCase = "true"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model GooglePlace {
  id                  String   @id // google place id: e.g. "ChIJN1t_tDeuEmsRUsoyG83frY4"
  types               String // JSON array of types
  displayName         String   @map("display_name")
  rating              Float
  userRatingCount     Float    @map("user_rating_count")
  latitude            Float
  longitude           Float
  googleMapsUri       String   @map("google_maps_uri")
  priceLevel          String?  @map("price_level")
  regularOpeningHours String?  @map("regular_opening_hours") // JSON array of opening hours objects
  reviews             String // JSON array of review objects
  photos              String // JSON array of photo objects
  raw                 String
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @default(now()) @map("updated_at")

  googlePlacesArea GooglePlaceArea[]

  @@map("google_places")
}

model GooglePlaceArea {
  googlePlaceId String      @map("google_place_id")
  cityId        String      @map("city_id")
  areaId        String      @map("area_id")
  categoryId    String      @map("category_id")
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @default(now()) @map("updated_at")
  googlePlaces  GooglePlace @relation(fields: [googlePlaceId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([googlePlaceId, areaId, categoryId], map: "google_place_area_category_unique")
  @@map("google_places_areas")
}

model Place {
  id                  String   @id // google place id: e.g. "ChIJN1t_tDeuEmsRUsoyG83frY4"
  categories          String   @default("[]") // JSON array of category
  genres              String   @default("[]") // JSON array of genre
  displayName         String   @map("display_name")
  rating              Float
  userRatingCount     Int      @map("user_rating_count")
  latitude            Float
  longitude           Float
  googleMapsUri       String   @map("google_maps_uri")
  sourceUri           String?  @map("source_uri")
  priceLevel          String?  @map("price_level")
  regularOpeningHours String?  @map("regular_opening_hours") // JSON array of opening hours objects
  reviews             String // JSON array of review objects
  photos              String // JSON array of photo objects
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @default(now()) @map("updated_at")

  placeListing    PlaceListing[]
  localizedPlaces LocalizedPlace[]

  @@map("places")
}

model PlaceListing {
  cityId      String   @map("city_id")
  areaId      String   @map("area_id")
  categoryId  String   @map("category_id")
  rankingType String   @map("ranking_type") // review, rating
  placeId     String   @map("place_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")
  places      Place    @relation(fields: [placeId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([cityId, areaId, categoryId, rankingType, placeId], map: "place_listings_unique")
  @@map("place_listings")
}

model LocalizedPlace {
  cityId              String   @map("city_id")
  areaId              String   @map("area_id")
  categoryId          String   @map("category_id")
  placeId             String   @map("place_id")
  language            String
  genres              String   @default("[]") // JSON array of genre
  displayName         String   @map("display_name")
  originalDisplayName String   @map("original_display_name")
  rating              Float
  userRatingCount     Int      @map("user_rating_count")
  latitude            Float
  longitude           Float
  googleMapsUri       String   @map("google_maps_uri")
  sourceUri           String?  @map("source_uri")
  priceLevel          String?  @map("price_level")
  regularOpeningHours String?  @map("regular_opening_hours") // JSON array of opening hours objects
  reviews             String // JSON array of review objects
  photos              String // JSON array of photo objects
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @default(now()) @map("updated_at")
  place               Place    @relation(fields: [placeId], references: [id])

  @@id([cityId, language, areaId, categoryId, placeId])
  @@map("localized_places")
}
